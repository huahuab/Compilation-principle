把上下无关文法定义在 grammar-input.txt 文本中，需要识别的token序列放在 token.in 文本中，
运行grammar.exe程序，即可读入文法到程序里，为了方便使用和后续操作，程序把每个符号都定义成一个数字，
并且保存了双向的对应关系，然后拓广了文法，添加开始唯一符号，将用 | 连接的式子进行拆分，
程序里用数据结构存储了拓广后的文法.创建了识别前缀的活前缀自动机，利用4.4构建的LR0分析表,
用analysis()方法 对输入的token序列进行识别，具体就是用一个栈，分下面三种情况进行处理：
一：action[s,a]=shift s' 是一个移入项目，将a和s'压栈，ip后移
二:action[s,a]=reduce A->B 是一个待约项目，弹出B长度的二倍的字符（把右部弹出），A压栈（左部压栈），goto[s'，A]压栈
三：可接受状态，返回真
程序输出规约用到的式子到 grammar-output.txt，识别失败也会输出相应的提示到文本中。